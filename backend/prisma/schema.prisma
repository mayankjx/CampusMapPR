generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model FacultyOrganizers_ {
  OrganizerID BigInt  @id @default(autoincrement())
  Designation String? @db.VarChar

  @@map(" FacultyOrganizers ")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ClubsOrganizers {
  OrganizerID          BigInt  @id @default(autoincrement())
  Name                 String? @db.VarChar
  Description          String?
  Coordinator_name     String? @db.VarChar
  Co_Coordinator_name  String? @map("Co-Coordinator_name") @db.VarChar
  Coordinator_email    String? @db.VarChar
  Co_Coordinator_email String? @map("Co-Coordinator_email") @db.VarChar
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Comments {
  CommentID   BigInt     @id @default(autoincrement())
  EntityType  String?    @db.VarChar
  EntityID    Int?
  UserID      BigInt?
  CommentText String?    @db.VarChar
  CommentDate DateTime?  @db.Timestamptz(6)
  Locations   Locations? @relation(fields: [EntityID], references: [LocationID], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model EventOrganizers_ {
  OrganizerID   BigInt  @id @default(autoincrement())
  UserID        BigInt?
  OrganizerType String? @db.VarChar

  @@map("EventOrganizers ")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model GeneralUsers {
  UserID_ BigInt @id @default(autoincrement()) @map("UserID ")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Locations {
  LocationID   Int        @id @default(autoincrement())
  LocationType String?    @db.VarChar
  Name         String?    @db.VarChar
  Description  String?
  x_cord       Float?     @db.Real
  y_cord       Float?     @db.Real
  Visibility   Int?
  ImageName    String?    @db.VarChar
  Comments     Comments[]
  Events       Events[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Organizer_locations {
  OrganizerID BigInt  @id @default(autoincrement())
  LocationID  BigInt?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ServiceProviderOrganizers {
  OrganizerID BigInt  @id @default(autoincrement())
  Type        String? @db.VarChar
  Name        String? @db.VarChar
  Description String?
  Remarks     String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Subscriptions {
  UserID       BigInt  @id @default(autoincrement())
  OrganizerID_ BigInt? @map("OrganizerID ")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  UserID    Int     @id
  FirstName String
  LastName  String
  UserType  String  @default("GeneralUser")
  UserUUID  String? @unique @db.Uuid
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Events {
  EventID     BigInt     @id(map: "Events _pkey") @default(autoincrement())
  OrganizerID BigInt?
  LocationID  Int?
  Title       String?    @db.VarChar
  Description String?
  start_date  DateTime?  @db.Timestamptz(6)
  end_date    DateTime?  @db.Timestamptz(6)
  Locations   Locations? @relation(fields: [LocationID], references: [LocationID], onDelete: NoAction, onUpdate: NoAction)
}
